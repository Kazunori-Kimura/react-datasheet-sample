{"version":3,"sources":["components/parts/types.ts","models/solid.ts","stores/user.ts","components/parts/util.ts","components/parts/DataCell.tsx","components/parts/DataTableToolbar.tsx","components/parts/DataTable.tsx","components/parts/pagination.ts","components/parts/PointTable.tsx","components/pages/Home.tsx","components/pages/Login.tsx","components/App.tsx","reportWebVitals.ts","stores/index.ts","index.tsx"],"names":["ComparedReference","isColor","item","temp","r","g","b","isPoint","id","name","x","y","z","color","defaultColor","slice","createSlice","initialState","reducers","setUserInfo","state","action","current","payload","clearUserInfo","undefined","actions","parseNumber","value","ret","parseFloat","isNaN","compareReference","c1","c2","row","col","Same","After","Before","DataCell","children","selected","attributesRenderer","onSelect","props","attributes","cell","useEffect","location","className","onMouseDown","onMouseOver","onDoubleClick","onContextMenu","colSpan","rowSpan","style","useStyles","makeStyles","theme","root","title","flex","DataTableToolbar","uninsertable","undeletable","insert","remove","goBack","classes","Toolbar","disableGutters","Tooltip","IconButton","onClick","Typography","variant","component","DataTable","data","columns","convertRow","useState","grid","setGrid","setCurrent","items","page","rowsPerPage","rowsPerPageOptions","currentPage","setPage","perPage","setRowsPerPage","emptyRows","useMemo","Math","min","length","pageItems","count","onChangePage","event","newPage","onChangeRowsPerPage","target","v","parseInt","Number","usePagination","paginationProps","rows","map","tabIndex","onKeyDown","key","pos","console","log","position","JSON","parse","stringify","emptyRow","splice","push","valueRenderer","sheetRenderer","column","index","cellRenderer","params","TablePagination","PointTable","validator","width","itemId","readOnly","parseEntity","entity","find","solid","newEntity","margin","spacing","padding","header","display","alignItems","signOut","marginLeft","json","backgroundColor","palette","background","default","random","floor","Home","user","points","setPoints","Array","_","Paper","email","Button","size","data-testid","Divider","Grid","container","xs","ConnectedHome","useSelector","dispatch","useDispatch","height","justifyContent","form","submit","marginTop","Login","signIn","password","setParams","handleChange","currentTarget","Container","maxWidth","autoComplete","onSubmit","preventDefault","checkValidity","TextField","required","fullWidth","label","onChange","autoFocus","type","ConnectedLogin","App","ConnectedApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootResucer","combineReducers","reducer","store","middlewares","getDefaultMiddleware","configureStore","middleware","devTools","process","createStore","createMuiTheme","overrides","MuiCssBaseline","html","body","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.24cb1390.chunk.js","sourcesContent":["import ReactDataSheet from 'react-datasheet';\n\n/**\n * セル型\n */\nexport interface GridElement extends ReactDataSheet.Cell<GridElement, string> {\n    value: string | null;\n    itemId?: string;\n}\n\n/**\n * セル位置の比較結果\n */\nexport enum ComparedReference {\n    Before = -1,\n    Same = 0,\n    After = 1,\n}\n\n/**\n * 選択範囲\n */\nexport interface Selection {\n    start: ReactDataSheet.CellReference;\n    end: ReactDataSheet.CellReference;\n}\n","export interface Color {\n    r: number;\n    g: number;\n    b: number;\n}\n\nexport const isColor = (item: unknown): item is Color => {\n    if (item && typeof item === 'object') {\n        const temp = item as Record<string, unknown>;\n        return (\n            typeof temp.r === 'number' && typeof temp.g === 'number' && typeof temp.b === 'number'\n        );\n    }\n    return false;\n};\n\nexport interface Point {\n    id: string;\n    name: string;\n    x: number;\n    y: number;\n    z: number;\n    color: Color;\n}\n\nexport const isPoint = (item: unknown): item is Point => {\n    if (item && typeof item === 'object') {\n        const temp = item as Record<string, unknown>;\n        return (\n            typeof temp.id === 'string' &&\n            typeof temp.name === 'string' &&\n            typeof temp.x === 'number' &&\n            typeof temp.y === 'number' &&\n            typeof temp.z === 'number' &&\n            isColor(temp.color)\n        );\n    }\n    return false;\n};\n\nexport interface Line {\n    id: string;\n    name: string;\n    start: string;\n    end: string;\n    color: Color;\n}\n\nexport const isLine = (item: unknown): item is Line => {\n    if (item && typeof item === 'object') {\n        const temp = item as Record<string, unknown>;\n        return (\n            typeof temp.id === 'string' &&\n            typeof temp.name === 'string' &&\n            typeof temp.start === 'string' &&\n            typeof temp.end === 'string' &&\n            isColor(temp.color)\n        );\n    }\n    return false;\n};\n\nexport interface Solid {\n    id: string;\n    name: string;\n    points: Point[];\n    lines: Line[];\n}\n\nexport const isSolid = (item: unknown): item is Solid => {\n    if (item && typeof item === 'object') {\n        const temp = item as Record<string, unknown>;\n        return (\n            typeof temp.id === 'string' &&\n            typeof temp.name === 'string' &&\n            Array.isArray(temp.points) &&\n            Array.isArray(temp.lines) &&\n            temp.points.every(isPoint) &&\n            temp.lines.every(isLine)\n        );\n    }\n    return false;\n};\n\nexport const defaultColor: Color = {\n    r: 0,\n    g: 0,\n    b: 0,\n};\n\nexport const data: Solid[] = [\n    // 立方体\n    {\n        id: 'solid1',\n        name: 'solid1',\n        points: [\n            {\n                id: 'p1',\n                name: 'point',\n                x: 0,\n                y: 0,\n                z: 0,\n                color: defaultColor,\n            },\n            {\n                id: 'p2',\n                name: 'point',\n                x: 6,\n                y: 0,\n                z: 0,\n                color: defaultColor,\n            },\n            {\n                id: 'p3',\n                name: 'point',\n                x: 6,\n                y: 0,\n                z: 6,\n                color: defaultColor,\n            },\n            {\n                id: 'p4',\n                name: 'point',\n                x: 0,\n                y: 0,\n                z: 6,\n                color: defaultColor,\n            },\n            {\n                id: 'p5',\n                name: 'point',\n                x: 0,\n                y: 6,\n                z: 0,\n                color: defaultColor,\n            },\n            {\n                id: 'p6',\n                name: 'point',\n                x: 6,\n                y: 6,\n                z: 0,\n                color: defaultColor,\n            },\n            {\n                id: 'p7',\n                name: 'point',\n                x: 6,\n                y: 6,\n                z: 6,\n                color: defaultColor,\n            },\n            {\n                id: 'p8',\n                name: 'point',\n                x: 0,\n                y: 6,\n                z: 6,\n                color: defaultColor,\n            },\n        ],\n        lines: [\n            {\n                id: 'l1',\n                name: 'line',\n                start: 'p1',\n                end: 'p2',\n                color: defaultColor,\n            },\n            {\n                id: 'l2',\n                name: 'line',\n                start: 'p2',\n                end: 'p3',\n                color: defaultColor,\n            },\n            {\n                id: 'l3',\n                name: 'line',\n                start: 'p3',\n                end: 'p4',\n                color: defaultColor,\n            },\n            {\n                id: 'l4',\n                name: 'line',\n                start: 'p1',\n                end: 'p4',\n                color: defaultColor,\n            },\n            {\n                id: 'l5',\n                name: 'line',\n                start: 'p1',\n                end: 'p5',\n                color: defaultColor,\n            },\n            {\n                id: 'l6',\n                name: 'line',\n                start: 'p2',\n                end: 'p6',\n                color: defaultColor,\n            },\n            {\n                id: 'l7',\n                name: 'line',\n                start: 'p3',\n                end: 'p7',\n                color: defaultColor,\n            },\n            {\n                id: 'l8',\n                name: 'line',\n                start: 'p4',\n                end: 'p8',\n                color: defaultColor,\n            },\n            {\n                id: 'l9',\n                name: 'line',\n                start: 'p5',\n                end: 'p6',\n                color: defaultColor,\n            },\n            {\n                id: 'l10',\n                name: 'line',\n                start: 'p6',\n                end: 'p7',\n                color: defaultColor,\n            },\n            {\n                id: 'l11',\n                name: 'line',\n                start: 'p7',\n                end: 'p8',\n                color: defaultColor,\n            },\n            {\n                id: 'l12',\n                name: 'line',\n                start: 'p5',\n                end: 'p8',\n                color: defaultColor,\n            },\n        ],\n    },\n];\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { UserInfo } from '../models/user';\n\nexport interface UserStore {\n    current?: UserInfo;\n}\n\nconst initialState: UserStore = {};\n\nconst slice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserInfo: (state: UserStore, action: PayloadAction<UserInfo>) => {\n            return {\n                ...state,\n                current: action.payload,\n            };\n        },\n        clearUserInfo: (state: UserStore) => {\n            return {\n                ...state,\n                current: undefined,\n            };\n        },\n    },\n});\n\nexport const { setUserInfo, clearUserInfo } = slice.actions;\nexport default slice;\n","import ReactDataSheet from 'react-datasheet';\nimport { ComparedReference, Selection } from './types';\n\n/**\n * 数値変換\n * @param value\n */\nexport const parseNumber = (value: string | undefined | null): number => {\n    if (value) {\n        const ret = parseFloat(value);\n        if (isNaN(ret)) {\n            return 0;\n        }\n        return ret;\n    }\n    return 0;\n};\n\n/**\n * セルの位置を比較する\n * c1 のほうが c2 より左上にある: -1 (ComparedReference.Before)\n * c1 と c2 が同じ位置: 0 (ComparedReference.Same)\n * c1 のほうが c2 より右下にある: 1 (ComparedReference.After)\n *\n * c2 が undefined の場合は常に ComparedReference.Before\n */\nexport const compareReference = (\n    c1: ReactDataSheet.CellReference,\n    c2?: ReactDataSheet.CellReference\n): ComparedReference => {\n    if (c2) {\n        if (c1.row === c2.row && c1.col === c2.col) {\n            return ComparedReference.Same;\n        }\n        if (c1.row > c2.row) {\n            return ComparedReference.After;\n        } else if (c1.row === c2.row && c1.col > c2.col) {\n            return ComparedReference.After;\n        }\n    }\n    return ComparedReference.Before;\n};\n\n/**\n * セルが指定した範囲内かどうかをチェックする\n * @param cell\n * @param range\n */\nexport const withinRange = (cell: ReactDataSheet.CellReference, range?: Selection): boolean => {\n    if (range) {\n        return (\n            range.start.row <= cell.row &&\n            cell.row <= range.end.row &&\n            range.start.col <= cell.col &&\n            cell.col <= range.end.col\n        );\n    }\n    return false;\n};\n\n/**\n * セルの集合から範囲を生成する\n * @param cells\n */\nexport const makeRange = (...cells: ReactDataSheet.CellReference[]): Selection | undefined => {\n    if (cells.length === 0) {\n        return undefined;\n    }\n    const cell = { ...cells[0] };\n    const range = {\n        start: cell,\n        end: cell,\n    };\n\n    // もっと効率のいいやり方がありそうだが...\n    for (let index = 1; index < cells.length; index++) {\n        const cell = { ...cells[index] };\n        if (compareReference(cell, range.start) === ComparedReference.Before) {\n            range.start = cell;\n        } else if (compareReference(cell, range.end) === ComparedReference.After) {\n            range.end = cell;\n        }\n    }\n\n    return range;\n};\n","import { useEffect } from 'react';\nimport ReactDataSheet from 'react-datasheet';\nimport { ComparedReference, GridElement } from './types';\nimport { compareReference } from './util';\n\ninterface DataCellProps extends ReactDataSheet.CellRendererProps<GridElement, string> {\n    current?: ReactDataSheet.CellReference;\n    onSelect?: (current?: ReactDataSheet.CellReference) => void;\n}\n\nconst DataCell: React.FC<DataCellProps> = ({\n    children,\n    row,\n    col,\n    selected,\n    attributesRenderer,\n    current,\n    onSelect,\n    ...props\n}) => {\n    const attributes = attributesRenderer ? attributesRenderer(props.cell, row, col) : {};\n\n    useEffect(() => {\n        const location: ReactDataSheet.CellReference = {\n            row,\n            col,\n        };\n\n        if (selected) {\n            if (compareReference(location, current) === ComparedReference.Before) {\n                onSelect && onSelect(location);\n            }\n        } else {\n            if (compareReference(location, current) === ComparedReference.Same) {\n                onSelect && onSelect(undefined);\n            }\n        }\n    }, [col, current, onSelect, row, selected]);\n\n    return (\n        <td\n            className={props.className}\n            onMouseDown={props.onMouseDown}\n            onMouseOver={props.onMouseOver}\n            onDoubleClick={props.onDoubleClick}\n            // onTouchEnd={cellProps.onDoubleClick}\n            onContextMenu={props.onContextMenu}\n            colSpan={props.cell.colSpan}\n            rowSpan={props.cell.rowSpan}\n            style={props.style ?? {}}\n            {...attributes}\n        >\n            {children}\n        </td>\n    );\n};\n\nexport default DataCell;\n","import { IconButton, makeStyles, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport { AiOutlineDelete, AiOutlineLeft, AiOutlinePlus } from 'react-icons/ai';\n\ninterface DataTableToolbarProps {\n    title: string;\n    uninsertable?: boolean;\n    undeletable?: boolean;\n    insert?: VoidFunction;\n    remove?: VoidFunction;\n    goBack?: VoidFunction;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //\n    },\n    title: {\n        flex: 1,\n    },\n    action: {\n        //\n    },\n}));\n\nconst DataTableToolbar: React.FC<DataTableToolbarProps> = ({\n    title,\n    uninsertable,\n    undeletable,\n    insert,\n    remove,\n    goBack,\n}) => {\n    const classes = useStyles();\n    return (\n        <Toolbar className={classes.root} disableGutters>\n            {goBack && (\n                <Tooltip title=\"戻る\">\n                    <IconButton onClick={goBack}>\n                        <AiOutlineLeft />\n                    </IconButton>\n                </Tooltip>\n            )}\n            <Typography className={classes.title} variant=\"h6\" component=\"h2\">\n                {title}\n            </Typography>\n            {!uninsertable && (\n                <Tooltip title=\"追加\">\n                    <IconButton onClick={insert}>\n                        <AiOutlinePlus />\n                    </IconButton>\n                </Tooltip>\n            )}\n            {!undeletable && (\n                <Tooltip title=\"削除\">\n                    <IconButton onClick={remove}>\n                        <AiOutlineDelete />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nexport default DataTableToolbar;\n","import { makeStyles, TablePagination } from '@material-ui/core';\nimport { KeyboardEvent, useEffect, useState } from 'react';\nimport ReactDataSheet from 'react-datasheet';\nimport DataCell from './DataCell';\nimport DataTableToolbar from './DataTableToolbar';\nimport { usePagination } from './pagination';\nimport { GridElement } from './types';\nimport 'react-datasheet/lib/react-datasheet.css';\n\ninterface DataTableProps<T> {\n    data: T[];\n    title: string;\n    columns: string[];\n    uninsertable?: boolean;\n    undeletable?: boolean;\n    onChange?: (data: T[]) => void;\n    validator?: (item: unknown) => item is T;\n    convertRow: (item: T | undefined | null, index: number) => GridElement[];\n    parseEntity?: (row: GridElement[], index: number) => T;\n    goBack?: VoidFunction;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        //\n    },\n}));\n\nfunction DataTable<T>({\n    data,\n    title,\n    columns,\n    //onChange,\n    //validator,\n    convertRow,\n}: //parseEntity,\nDataTableProps<T>): React.ReactElement {\n    // データ全体\n    const [grid, setGrid] = useState<GridElement[][]>([]);\n    // 現在のフォーカスセル\n    const [current, setCurrent] = useState<ReactDataSheet.CellReference>();\n    // TODO 選択セルの管理\n\n    const classes = useStyles();\n    const { emptyRows, pageItems, ...paginationProps } = usePagination({\n        items: grid,\n        rowsPerPage: 10,\n    });\n\n    /**\n     * 行の挿入\n     * @param position 挿入位置, 未指定なら最下部\n     */\n    const insert = (position?: number) => {\n        const rows = JSON.parse(JSON.stringify(grid)) as GridElement[][];\n        const pos = position\n            ? paginationProps.page * paginationProps.rowsPerPage + position\n            : rows.length;\n\n        console.log(`insert: ${pos}`);\n        const emptyRow = convertRow(null, pos);\n\n        if (typeof position === 'number') {\n            rows.splice(position, 0, emptyRow);\n        } else {\n            rows.push(emptyRow);\n        }\n\n        setGrid(rows);\n    };\n\n    /**\n     * 行の挿入\n     */\n    const handleInsert = () => {\n        let pos = current?.row;\n        console.log(`handleInsert: ${pos}`);\n        if (typeof pos === 'number') {\n            pos += 1;\n        }\n        insert(pos);\n    };\n\n    /**\n     * キーボード操作（ページ送り）\n     * @param event\n     */\n    const handleKeyboardEvent = (event: KeyboardEvent) => {\n        if (event.key === 'Enter') {\n            // TODO フォーカスが最下行だったら次ページに遷移\n            // TODO フォーカスが先頭行だったら前ページに遷移\n            // フォーカスのあるセルが Editable の場合は考慮が必要\n        }\n    };\n\n    // データの整形\n    useEffect(() => {\n        const rows = data.map(convertRow);\n        setGrid(rows);\n    }, [convertRow, data]);\n\n    return (\n        <div className={classes.root} tabIndex={-1} onKeyDown={handleKeyboardEvent}>\n            <DataTableToolbar title={title} insert={handleInsert} />\n            <ReactDataSheet\n                data={pageItems}\n                valueRenderer={(cell) => cell.value}\n                sheetRenderer={(props) => (\n                    <table className={props.className}>\n                        <thead>\n                            <tr>\n                                {columns.map((column, index) => (\n                                    <th\n                                        className=\"cell read-only\"\n                                        key={`datasheet-header-cell-${index}`}\n                                    >\n                                        {column}\n                                    </th>\n                                ))}\n                            </tr>\n                        </thead>\n                        <tbody>{props.children}</tbody>\n                    </table>\n                )}\n                cellRenderer={(params) => (\n                    <DataCell current={current} onSelect={setCurrent} {...params} />\n                )}\n            />\n            <TablePagination {...paginationProps} />\n        </div>\n    );\n}\n\nexport default DataTable;\n","import { ChangeEvent, ElementType, useMemo, useState } from 'react';\n\ninterface usePaginationParams<T> {\n    component?: ElementType;\n    items: T[];\n    page?: number;\n    rowsPerPage: number;\n    rowsPerPageOptions?: number[];\n}\n\ninterface usePaginationValues<T> {\n    component?: ElementType;\n    count: number;\n    emptyRows: number;\n    page: number;\n    pageItems: T[];\n    rowsPerPage: number;\n    rowsPerPageOptions: number[];\n    onChangePage: (event: unknown, page: number) => void;\n    onChangeRowsPerPage: (event: ChangeEvent<HTMLInputElement>) => void;\n}\n\n/**\n * TablePagination の props を生成するカスタム Hooks\n */\nexport const usePagination = <T>({\n    component = 'div',\n    items,\n    page = 0,\n    rowsPerPage,\n    rowsPerPageOptions = [5, 10, 30],\n}: usePaginationParams<T>): usePaginationValues<T> => {\n    const [currentPage, setPage] = useState(page);\n    const [perPage, setRowsPerPage] = useState(rowsPerPage);\n\n    const onChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const onChangeRowsPerPage = (event: ChangeEvent<HTMLInputElement>) => {\n        const { value } = event.target;\n        const v = parseInt(value, 10);\n        if (!Number.isNaN(v)) {\n            setPage(0);\n            setRowsPerPage(v);\n        }\n    };\n\n    const emptyRows = useMemo(() => {\n        return perPage - Math.min(perPage, items.length - currentPage * perPage);\n    }, [items.length, currentPage, perPage]);\n\n    const pageItems = useMemo(\n        () => items.slice(currentPage * perPage, currentPage * perPage + perPage),\n        [currentPage, items, perPage]\n    );\n\n    return {\n        component,\n        count: items.length,\n        emptyRows,\n        page: currentPage,\n        pageItems,\n        rowsPerPage: perPage,\n        rowsPerPageOptions,\n        onChangePage,\n        onChangeRowsPerPage,\n    };\n};\n","import { defaultColor, isPoint, Point } from '../../models/solid';\nimport DataTable from './DataTable';\nimport { GridElement } from './types';\nimport { parseNumber } from './util';\n\ninterface PointTableProps {\n    data: Point[];\n    onChange?: (data: Point[]) => void;\n}\n\nconst PointTable: React.FC<PointTableProps> = ({ data }) => {\n    const convertRow = (item: Point | undefined | null, index: number): GridElement[] => {\n        return [\n            // id & name\n            {\n                value: item?.name ?? `point${index + 1}`,\n                width: 100,\n                itemId: item?.id ?? `point${index + 1}`,\n            },\n            // x\n            {\n                value: `${item?.x ?? 0}`,\n                width: 100,\n            },\n            // y\n            {\n                value: `${item?.y ?? 0}`,\n                width: 100,\n            },\n            // z\n            {\n                value: `${item?.z ?? 0}`,\n                width: 100,\n            },\n            // TODO: color\n            {\n                value: `[${item?.color.r ?? 0}, ${item?.color.g ?? 0}, ${item?.color.b ?? 0}]`,\n                readOnly: true,\n                width: 100,\n            },\n        ];\n    };\n\n    const parseEntity = (row: GridElement[], index: number): Point => {\n        const id = row[0].itemId ?? `p${index + 1}`;\n        const name = row[0].value ?? `point${index + 1}`;\n        const entity = data.find((solid) => solid.id === id);\n        if (entity) {\n            const newEntity = JSON.parse(JSON.stringify(entity)) as Point;\n            newEntity.name = name;\n            return newEntity;\n        }\n\n        return {\n            id,\n            name,\n            x: parseNumber(row[1].value),\n            y: parseNumber(row[2].value),\n            z: parseNumber(row[3].value),\n            color: defaultColor,\n        };\n    };\n\n    return (\n        <DataTable<Point>\n            title=\"Point\"\n            data={data}\n            columns={['name', 'x', 'y', 'z', 'color']}\n            validator={isPoint}\n            convertRow={convertRow}\n            parseEntity={parseEntity}\n        />\n    );\n};\n\nexport default PointTable;\n","import { Button, Divider, Grid, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { defaultColor, Point } from '../../models/solid';\nimport { UserInfo } from '../../models/user';\nimport { RootState } from '../../stores';\nimport { clearUserInfo } from '../../stores/user';\nimport PointTable from '../parts/PointTable';\n//import SolidTable from '../parts/SolidTable';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(3),\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1),\n    },\n    title: {\n        flex: 1,\n    },\n    signOut: {\n        marginLeft: theme.spacing(1),\n    },\n    json: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.default,\n    },\n}));\n\ninterface HomeProps {\n    user?: UserInfo;\n    signOut?: VoidFunction;\n}\n\n// ランダムな数値を取得\nconst random = (): number => {\n    return Math.floor(Math.random() * 1000) / 100;\n};\n\nexport const Home: React.FC<HomeProps> = ({ user, signOut }) => {\n    const [points, setPoints] = useState<Point[]>([]);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        // 適当に Point を 100件生成\n        const items: Point[] = [...Array(100)].map((_, index) => {\n            const id = `p${index + 1}`;\n            const name = `point${index + 1}`;\n\n            return {\n                id,\n                name,\n                x: random(),\n                y: random(),\n                z: random(),\n                color: defaultColor,\n            };\n        });\n        setPoints(items);\n    }, []);\n\n    return (\n        <Paper className={classes.root}>\n            <header className={classes.header}>\n                <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\n                    Home\n                </Typography>\n\n                {user && <Typography variant=\"body1\">{user.email}</Typography>}\n\n                <Button\n                    className={classes.signOut}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    data-testid=\"signout\"\n                    onClick={signOut}\n                >\n                    Sign Out\n                </Button>\n            </header>\n            <Divider />\n            {/* react-datasheetのテスト */}\n            <Grid container>\n                <Grid item xs={6}>\n                    <PointTable data={points} />\n                </Grid>\n                <Grid item xs={6}>\n                    <pre className={classes.json}>{JSON.stringify(points, null, 4)}</pre>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n\nconst ConnectedHome: React.FC = () => {\n    const user = useSelector((state: RootState) => state.user);\n    const dispatch = useDispatch();\n    const props: HomeProps = {\n        user: user.current,\n        signOut: () => dispatch(clearUserInfo()),\n    };\n\n    return <Home {...props} />;\n};\n\nexport default ConnectedHome;\n","import { Button, Container, makeStyles, TextField, Typography } from '@material-ui/core';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setUserInfo } from '../../stores/user';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    form: {\n        //\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\ninterface LoginProps {\n    signIn?: (email: string) => void;\n}\n\ninterface LoginState {\n    email: string;\n    password: string;\n}\n\nexport const Login: React.FC<LoginProps> = ({ signIn }) => {\n    const [params, setParams] = useState<Partial<LoginState>>({\n        email: 'test@example.com',\n        password: 'secret',\n    });\n    const classes = useStyles();\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.currentTarget;\n        setParams({\n            ...params,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        if (event.currentTarget.checkValidity()) {\n            if (signIn && params.email) {\n                signIn(params.email);\n            }\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <Container\n                component=\"form\"\n                maxWidth=\"xs\"\n                className={classes.form}\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n            >\n                <Typography variant=\"h1\">Sign In</Typography>\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={params.email ?? ''}\n                    onChange={handleChange}\n                    autoFocus\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Password\"\n                    id=\"password\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={params.password ?? ''}\n                    onChange={handleChange}\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    size=\"large\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    data-testid=\"signin\"\n                >\n                    Sign In\n                </Button>\n            </Container>\n        </div>\n    );\n};\n\nconst ConnectedLogin: React.FC = () => {\n    const dispatch = useDispatch();\n    const props: LoginProps = {\n        signIn: (email: string) => {\n            dispatch(\n                setUserInfo({\n                    email,\n                })\n            );\n        },\n    };\n\n    return <Login {...props} />;\n};\n\nexport default ConnectedLogin;\n","import { useSelector } from 'react-redux';\nimport { UserInfo } from '../models/user';\nimport { RootState } from '../stores';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\n\ninterface AppProps {\n    user?: UserInfo;\n}\n\nexport const App: React.FC<AppProps> = ({ user }) => {\n    return <>{user ? <Home /> : <Login />}</>;\n};\n\nconst ConnectedApp: React.FC = () => {\n    const user = useSelector((state: RootState) => state.user);\n    const props: AppProps = {\n        user: user.current,\n    };\n    return <App {...props} />;\n};\n\nexport default ConnectedApp;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore, getDefaultMiddleware, Store } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport user from './user';\n\nconst rootResucer = combineReducers({\n    user: user.reducer,\n});\n\nexport type RootState = ReturnType<typeof rootResucer>;\nexport type ReduxStore = Store<RootState>;\n\nconst createStore = (): ReduxStore => {\n    const middlewares = [...getDefaultMiddleware()];\n\n    if (process.env.NODE_ENV === 'development') {\n        middlewares.push(logger);\n    }\n\n    const store = configureStore({\n        reducer: rootResucer,\n        middleware: middlewares,\n        devTools: process.env.NODE_ENV === 'development',\n    });\n\n    return store;\n};\n\nexport default createStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport createStore from './stores';\n\nconst store = createStore();\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiCssBaseline: {\n            '@global': {\n                html: {\n                    margin: 0,\n                    padding: 0,\n                },\n                body: {\n                    margin: 0,\n                    padding: 0,\n                },\n            },\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <Provider store={store}>\n            <ThemeProvider theme={theme}>\n                <App />\n            </ThemeProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}